---
jenkins:
  crumbIssuer: standard
  remotingSecurity:
    enabled: true
  securityRealm:
    oic:
      clientId: jenkins
      clientSecret: ${KEYCLOAK_JENKINS_SECRET}
      automanualconfigure: manual
      tokenServerUrl: "http://keycloak:8080/auth/realms/ci/protocol/openid-connect/token"
      userInfoServerUrl: "http://keycloak:8080/auth/realms/ci/protocol/openid-connect/userinfo"
      authorizationServerUrl: "http://localhost:8080/auth/realms/ci/protocol/openid-connect/auth"
      endSessionEndpoint: "http://localhost:8080/auth/realms/ci/protocol/openid-connect/logout"
      postLogoutRedirectUrl: "http://localhost:4040"
      logoutFromOpenidProvider: true
      userNameField: preferred_username
      fullNameFieldName: fullName
      groupsFieldName: groups
      emailFieldName: email
      scopes: openid email
  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            assignments:
              - "jenkins_admins"
          - name: "build"
            description: "Jenkins users"
            permissions:
              - "Overall/Read"
              - "Job/Read"
              - "Job/Build"
            assignments:
              - "authenticated"
          - name: "readonly"
            description: "Read-only users"
            permissions:
              - "Overall/Read"
              - "Job/Read"
            assignments:
              - "anonymous"

  numExecutors: 0
  nodes:
    - permanent:
        name: "worker-1"
        remoteFS: "/home/jenkins"
        labelString: "fedora"
        launcher:
          ssh:
            host: "worker"
            credentialsId: "agent-ssh-key"
            sshHostKeyVerificationStrategy:
              manuallyTrustedKeyVerificationStrategy:
                requireInitialManualTrust: false

security:
  queueItemAuthenticator:
    authenticators:
      - global:
          strategy: "triggeringUsersAuthorizationStrategy"

credentials:
  system:
    domainCredentials:
      - credentials:
          - basicSSHUserPrivateKey:
              scope: SYSTEM
              id: agent-ssh-key
              username: jenkins
              description: "Test SSH credentials"
              privateKeySource:
                directEntry:
                  privateKey: ${ssh_private_key}
          - usernamePassword:
              id: "gitea-login"
              password: ${GITEA_PASSWORD}
              scope: GLOBAL
              username: "demo"

unclassified:
  location:
    url: http://localhost:4040
  giteaServers:
    servers:
      - credentialsId: "gitea-login"
        displayName: "mygitea"
        manageHooks: true
        serverUrl: "http://gitea:3000"
